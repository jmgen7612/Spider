#!/usr/bin/env python3# -*- coding: utf-8 -*-#@file   :VideoAndImgToText.py#@time   :2018/5/12 23:16#@Author :jmgen#@Version:1.0#@Desc   :import requestsimport os,re,random,chardet,jsondef download_mp4(url,name):    headers={'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36Name','Referer':'http://91porn.com'}    req=requests.get(url=url,headers=headers)    filename=str(name)+'.mp4'    cur_dir = os.getcwd()  # get current path    folder_name = '视频'    dir_new = os.path.join(cur_dir, folder_name)    if os.path.isdir(cur_dir):        os.chdir(dir_new)    print(dir_new)    print("下载视频")    with open(filename,'wb') as f:        f.write(req.content)def download_img(url,name):    headers={'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36Name','Referer':'http://91porn.com'}    req=requests.get(url=url,headers=headers)    filename=str(name)+'.jpg'    cur_dir = os.getcwd()  # get current path    folder_name = "图片"    dir_new = os.path.join(cur_dir, folder_name)    print(dir_new)    if os.path.isdir(cur_dir):        os.chdir(dir_new)    print("下载图片")    with open(filename,'wb') as f:        f.write(req.content)def random_ip():    a=random.randint(1,255)    b=random.randint(1,255)    c=random.randint(1,255)    d=random.randint(1,255)    return(str(a)+'.'+str(b)+'.'+str(c)+'.'+str(d))flag=1while flag<=671:    tittle = []    base_url = 'http://www.80pcpc.com/video/'    page_url = 'http://www.80pcpc.com/diao/se57_'+str(flag)+'.html'    print(page_url)    get_page = requests.get(url=page_url)    viewkey=re.findall(r'href="/video/(.*).html',str(get_page.content,'utf-8',errors='ignore'))    video_url = []    img_url = []    list = []    video=[]    # print(viewkey)    for key in viewkey:        # print(key)        headers = {'Accept-Language': 'zh-CN,zh;q=0.9',                   'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36',                   'X-Forwarded-For': random_ip(), 'referer': page_url,                   'Content-Type': 'multipart/form-data; session_language=cn_CN'}        try:            base_req = requests.get(url=base_url + key + ".html", headers=headers)            base_req.encoding = chardet.detect(base_req.content)["encoding"]            # print(base_url + key+".html")            video_url = re.findall(r'video=\["(.*)"\]',                                   str(base_req.content, 'utf-8', errors='ignore'))            # print(video_url[0])            tittle = re.findall(r'<title>(.*?)-32pao视频免费在线视频</title>', str(base_req.content, 'GB2312', errors='ignore'),                                re.S)            # print(chardet.detect(base_req.content))            img_url = re.findall(r'<img src="(.*?)" title=', str(base_req.content, 'utf-8', errors='ignore'))            # print(img_url)        except:            print("打开页面异常")        try:            list.append({'title': tittle, 'video_url': video_url[0],'img_url': img_url})            video.append({str(tittle[0]): video_url[0]})        except:            print("页面异常")        # try:        #     # print('开始下载:' + str(tittle))        #     # download_img(str(img_url[0]), str(tittle))        #     # download_mp4(str(video_url[0]), str(tittle))        #     # print('下载完成')        #     print('开始保存资源链接:' + str(tittle))        #     with open('资源链接.txt', 'w') as fp:        #         fp.write(list)        # except:        #        #     print("保存失败")        try:            print('开始保存资源链接:' + str(tittle))            with open('text/资源链接.txt', 'a+', newline='') as fp:                json.dump(list, fp=fp, indent=4, ensure_ascii=False)            with open('text/视频链接.txt', 'a+', newline='') as fp:                json.dump(video, fp=fp, indent=4, ensure_ascii=False)        except:            print("保存失败")    flag = flag + 1    print('此页已下载完成，下一页是' + str(flag))