#!/usr/bin/env python3# -*- coding: utf-8 -*-#@file   :DataOutput.py#@time   :2018/5/26 2:00#@Author :jmgen#@Version:1.0#@Desc   :import sqlite3import timeimport xlsxwriterfrom LagouSpider.wayThree.OutputExcel import OutputExcelclass DataOutput(object):    def __init__(self):        self.name='jobs' + time.strftime('%Y%m%d%H%M%S', time.localtime())        self.cx = sqlite3.connect("%s.sqlite3"%self.name)        self.create_table(self.name)        self.pagedatas=[]        self.excelfile,self.worksheet=self.initExcel()    def create_table(self,table_name):        '''        创建数据表        :param table_name:表名称        :return:        '''        values = '''        positionId integer primary key,        positionName varchar(50) NOT NULL,        companyFullName varchar(50) NOT NULL,        companyId integer NOT NULL,        workYear varchar(20) NOT NULL,        salary varchar(10) NOT NULL,        education varchar(10) NOT NULL,        city varchar(10) NOT NULL,        district varchar(20) NOT NULL,        businessZones varchar(40) NOT NULL,        financeStage varchar(20) NOT NULL,        industryField varchar(20) NOT NULL,        companySize varchar(20) NOT NULL,        positionAdvantage varchar(20) NOT NULL,        companyLabelList varchar(20) NOT NULL,        firstType varchar(20) NOT NULL,        secondType varchar(20) NOT NULL,        createTime varchar(20) NOT NULL,        lastLogin varchar(20) NOT NULL,        resumeProcessRate integer NOT NULL,        resumeProcessDay integer NOT NULL,        joblabel varchar(20) NOT NULL,        jobdescription varchar(1000000) NOT NULL,        jobaddress varchar(40) NOT NULL,        pageurl varchar(60) NOT NULL        '''        self.cx.execute('CREATE TABLE IF NOT EXISTS  %s(%s)'%(table_name,values))    def store_datas(self, datas):        '''        数据存储        :param data:        :return:        '''        if datas is None:            return        self.output_db(self.name,datas)    def output_db(self, table_name,datas):        '''        将数据存储到sqlite        :return:        '''        for data in datas:            self.cx.execute("INSERT INTO %s (positionId, positionName, companyFullName, companyId, workYear,"                            "salary, education, city, district, businessZones,financeStage,"                            " industryField, companySize,positionAdvantage,companyLabelList,"                            " firstType,secondType,createTime, lastLogin, resumeProcessRate,"                            " resumeProcessDay,joblabel,jobdescription,jobaddress,pageurl) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"% table_name,data)            datas.remove(data)        self.cx.commit()    def output_file(self,datas):        try:            result=[('positionId','职位ID'),('positionName', '职位名称'), ('companyFullName','公司全称'),                    ('companyId','公司ID'), ('workYear', '工作经验'),('salary', '薪资'), ('education', '学历'),                    ('city', '城市'), ('district', '行政区'), ('businessZones', '商圈'),('financeStage','融资阶段'),                    ('industryField', '企业领域'), ('companySize', '公司规模'),('positionAdvantage', '职位优势'),                    ('companyLabelList', '公司标签'),('firstType', '职位大类'),('secondType', '职位细类'),                    ('createTime', '发布时间'), ('lastLogin','最近登录'), ('resumeProcessRate','简历处理率'),                    ('resumeProcessDay','简历处理时间'),('joblabel','职位标签'),('jobdescription','职位描述'),                    ('jobaddress','工作地点'),('pageurl','职位页面')]            if (len(datas) > 0):                for data in datas:                    with open("%s.txt"%self.name, 'a') as fh:                        fh.write("---------------------------\n")                        print(data)                    i=0                    for r in result:                        with open("%s.txt"%self.name, 'a') as fh:                            fh.write(str(r[1]) + ":" + str(data[i]) + "\n")                        i+=1            return len(datas)        except Exception as e:            print(str(e))    def initExcel(self):        workbook = xlsxwriter.Workbook("%s.xlsx"%self.name)        worksheet = workbook.add_worksheet("职位信息")        excel = OutputExcel(workbook)        excel.init(worksheet)        return excel,worksheet    def writeExcel(self,temp,datas):        temp =self.excelfile.detail(temp,self.worksheet,datas)        return temp    def closeExcel(self):        self.excelfile.close()